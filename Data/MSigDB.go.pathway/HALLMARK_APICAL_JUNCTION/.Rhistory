library(pracma)
library(gplots)
filename <- read.csv("HMK.kegg.top10.txt", header=T, sep="\t", stringsAsFactors=F)
pathway <- filename$Pathway
netbas <- filename$NetBAS
david <- filename$DAVID
#convert DAVID p-values to z-scores
z.david <- c()
for (i in 1:10) {
z.val <- abs(david[i] - sqrt(2)*erfcinv(2*david[i]))
z.david <- rbind(z.david, z.val)
}
david
z.david
scale.factor <- max(netbas) / max(z.david[!is.na(z.david)])
z.david <- round(z.david * scale.factor,3)
zscores <- matrix(cbind(netbas, z.david), ncol=2)
colnames(zscores) <- c("NetBAS", "DAVID")
rownames(zscores) <- pathway
colors=c(seq(0,4.9,length=5), seq(5.1,max(netbas),length=5))
my_palette <- colorRampPalette(c("white", "red2"))(n=9)
p.david <- c("1.0E-51", "NA", "NA", "9.7E-2", "NA", "NA", "NA", "NA", "3.3E-7", "NA")
note <- cbind(netbas, p.david)
png(filename= "netbas-david.kegg.top10.png", width=5, height=6, res=1200, unit="in")
heatmap.2(zscores, col=my_palette, dendrogram='none', breaks=colors,
colsep = 1:2, rowsep = 1:10, sepcolor="lightgrey", sepwidth=c(0.02,0.02),
trace='none', Rowv=F, Colv=F,
ylab="KEGG Pathways", xlab="",
margins=c(1,12), key.title=NA, key.xlab=NA, key.ylab=NA,
scale="none", symbreaks=F, symm=F, symkey=F,
adjCol=c(0.5,0), adjRow=c(0.05,0), srtRow=45, srtCol=0,
cexRow=0.9, cexCol=0.9, cellnote=note, main="")
dev.off()
setwd("../HALLMARK_PI3K_AKT_MTOR_SIGNALING/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_PI3K_AKT_MTOR_SIGNALING.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_PROTEIN_SECRETION/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_PROTEIN_SECRETION.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_REACTIVE_OXIGEN_SPECIES_PATHWAY/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_REACTIVE_OXIGEN_SPECIES_PATHWAY.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_SPERMATOGENESIS/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_SPERMATOGENESIS.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
getwd()
setwd("../HALLMARK_TGF_BETA_SIGNALING/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_TGF_BETA_SIGNALING.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_TNFA_SIGNALING_VIA_NFKB/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_TNFA_SIGNALING_VIA_NFKB.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_UNFOLDED_PROTEIN_RESPONSE/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_UNFOLDED_PROTEIN_RESPONSE.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_UV_RESPONSE_DN/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_UV_RESPONSE_DN.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_UV_RESPONSE_UP/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_UV_RESPONSE_UP.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_WNT_BETA_CATENIN_SIGNALING/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_WNT_BETA_CATENIN_SIGNALING.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_XENOBIOTIC_METABOLISM/")
rm(list=ls())
human.pin <- read.csv("../../human.pin.csv", header=T, stringsAsFactors = F)
geneA <- human.pin$geneA
geneB <- human.pin$geneB
#All genes appear in PIN
all.list <- unique(c(geneA, geneB))
#the Gene list
geneset <- read.csv("HALLMARK_XENOBIOTIC_METABOLISM.csv", header=T, stringsAsFactors = F)
gene.list <- geneset$gene
#number of genes in the set
length(gene.list)
#number of genes of the set appear in the PIN
length(which(gene.list %in% all.list))
#Constructing the sub network fromn the gene set
subA <- geneA[which((geneA %in% gene.list) & (geneB %in% gene.list))]
subB <- geneB[which((geneA %in% gene.list) & (geneB %in% gene.list))]
sub.web <- data.frame(cbind(subA, subB))
length(sub.web[,1])
library(igraph)
library(gplots)
sub.graph <- graph.data.frame(sub.web, directed = F)
sub.largest.clique <- largest_cliques(sub.graph)
#total number of largest clques
length(sub.largest.clique)
#number of genes in the largest cliques
sub.clique.1 <- sub.largest.clique[[1]]
degree <- length(sub.clique.1)
degree
setwd("../HALLMARK_ANDROGEN_RESPONSE/")
setwd("../HALLMARK_ANGIOGENESIS/")
####
##This script lists DAVID and NetBAS result side-by-side
##p-values in DAVID are converted to z-scores, and scaled to match the maximum of NetBAS
rm(list=ls())
library(pracma)
library(gplots)
filename <- read.csv("HMK.cc.top10.txt", header=T, sep="\t", stringsAsFactors=F)
go.id <- filename$GO.ID
go.term <- filename$GO.Term
netbas <- filename$NetBAS
david <- filename$DAVID
#convert DAVID p-values to z-scores
z.david <- c()
for (i in 1:10) {
z.val <- abs(david[i] - sqrt(2)*erfcinv(2*david[i]))
z.david <- rbind(z.david, z.val)
}
scale.factor <- max(netbas) / max(z.david[!is.na(z.david)])
z.david <- round(z.david * scale.factor,3)
zscores <- matrix(cbind(netbas, z.david), ncol=2)
colnames(zscores) <- c("NetBAS", "DAVID")
rownames(zscores) <- go.id
colors=c(seq(0,4.9,length=5), seq(5.1,max(netbas),length=5))
my_palette <- colorRampPalette(c("white", "red2"))(n=9)
p.david <- c("5.8E-3", "2.4E-3", "6.0E-10", "4.5E-6", "NA", "8.8E-12", "NA", "7.9E-6", "7.0E-2", "3.1E-3")
note <- cbind(netbas, p.david)
netbas
####
##This script lists DAVID and NetBAS result side-by-side
##p-values in DAVID are converted to z-scores, and scaled to match the maximum of NetBAS
rm(list=ls())
library(pracma)
library(gplots)
filename <- read.csv("HMK.cc.top10.txt", header=T, sep="\t", stringsAsFactors=F)
go.id <- filename$GO.ID
go.term <- filename$GO.Term
netbas <- filename$NetBAS
david <- filename$DAVID
#convert DAVID p-values to z-scores
z.david <- c()
for (i in 1:10) {
z.val <- abs(david[i] - sqrt(2)*erfcinv(2*david[i]))
z.david <- rbind(z.david, z.val)
}
scale.factor <- max(netbas) / max(z.david[!is.na(z.david)])
z.david <- round(z.david * scale.factor,3)
zscores <- matrix(cbind(netbas, z.david), ncol=2)
colnames(zscores) <- c("NetBAS", "DAVID")
rownames(zscores) <- go.id
colors=c(seq(0,4.9,length=5), seq(5.1,max(netbas),length=5))
my_palette <- colorRampPalette(c("white", "red2"))(n=9)
p.david <- c("5.8E-3", "2.4E-3", "6.0E-10", "4.5E-6", "NA", "8.8E-12", "NA", "7.9E-6", "7.0E-2", "3.1E-3")
note <- cbind(netbas, p.david)
png(filename= "netbas-david.cc.top10.png", width=3.5, height=6, res=1200, unit="in")
heatmap.2(zscores, col=my_palette, dendrogram='none', breaks=colors,
colsep = 1:2, rowsep = 1:10, sepcolor="lightgrey", sepwidth=c(0.02,0.02),
trace='none', Rowv=F, Colv=F,
ylab="Cellular Component Terms", xlab="",
margins=c(1,5.5), key.title=NA, key.xlab=NA, key.ylab=NA,
scale="none", symbreaks=F, symm=F, symkey=F,
adjCol=c(0.5,0), adjRow=c(0.05,0), srtRow=45, srtCol=0,
cexRow=0.9, cexCol=0.9, cellnote=note, main="")
dev.off()
####
##This script lists DAVID and NetBAS result side-by-side
##p-values in DAVID are converted to z-scores, and scaled to match the maximum of NetBAS
rm(list=ls())
library(pracma)
library(gplots)
filename <- read.csv("HMK.cc.top10.txt", header=T, sep="\t", stringsAsFactors=F)
go.id <- filename$GO.ID
go.term <- filename$GO.Term
netbas <- filename$NetBAS
david <- filename$DAVID
#convert DAVID p-values to z-scores
z.david <- c()
for (i in 1:10) {
z.val <- abs(david[i] - sqrt(2)*erfcinv(2*david[i]))
z.david <- rbind(z.david, z.val)
}
scale.factor <- max(netbas) / max(z.david[!is.na(z.david)])
z.david <- round(z.david * scale.factor,3)
zscores <- matrix(cbind(netbas, z.david), ncol=2)
colnames(zscores) <- c("NetBAS", "DAVID")
rownames(zscores) <- go.id
colors=c(seq(0,4.9,length=5), seq(5.1,max(netbas),length=5))
my_palette <- colorRampPalette(c("white", "red2"))(n=9)
p.david <- c("5.8E-3", "2.4E-3", "6.0E-10", "4.5E-6", "NA", "8.8E-12", "NA", "7.9E-6", "7.0E-2", "3.1E-3")
note <- cbind(netbas, p.david)
png(filename= "netbas-david.cc.top10.png", width=3.5, height=6, res=1200, unit="in")
heatmap.2(zscores, col=my_palette, dendrogram='none', breaks=colors,
colsep = 1:2, rowsep = 1:10, sepcolor="lightgrey", sepwidth=c(0.02,0.02),
trace='none', Rowv=F, Colv=F,
ylab="Cellular Component Terms", xlab="",
margins=c(1,5.5), key.title=NA, key.xlab=NA, key.ylab=NA,
scale="none", symbreaks=F, symm=F, symkey=F,
adjCol=c(0.5,0), adjRow=c(0.05,0), srtRow=45, srtCol=0,
cexRow=0.9, cexCol=0.9, cellnote=note, main="")
dev.off()
setwd("../HALLMARK_APICAL_JUNCTION/")
####
##This script lists DAVID and NetBAS result side-by-side
##p-values in DAVID are converted to z-scores, and scaled to match the maximum of NetBAS
rm(list=ls())
library(pracma)
library(gplots)
filename <- read.csv("HMK.bp.top10.txt", header=T, sep="\t", stringsAsFactors=F)
go.id <- filename$GO.ID
go.term <- filename$GO.Term
netbas <- filename$NetBAS
david <- filename$DAVID
#convert DAVID p-values to z-scores
z.david <- c()
for (i in 1:10) {
z.val <- abs(david[i] - sqrt(2)*erfcinv(2*david[i]))
z.david <- rbind(z.david, z.val)
}
scale.factor <- max(netbas) / max(z.david[!is.na(z.david)])
z.david <- round(z.david * scale.factor,3)
zscores <- matrix(cbind(netbas, z.david), ncol=2)
netbas
####
##This script lists DAVID and NetBAS result side-by-side
##p-values in DAVID are converted to z-scores, and scaled to match the maximum of NetBAS
rm(list=ls())
library(pracma)
library(gplots)
filename <- read.csv("HMK.bp.top10.txt", header=T, sep="\t", stringsAsFactors=F)
go.id <- filename$GO.ID
go.term <- filename$GO.Term
netbas <- filename$NetBAS
david <- filename$DAVID
#convert DAVID p-values to z-scores
z.david <- c()
for (i in 1:10) {
z.val <- abs(david[i] - sqrt(2)*erfcinv(2*david[i]))
z.david <- rbind(z.david, z.val)
}
scale.factor <- max(netbas) / max(z.david[!is.na(z.david)])
z.david <- round(z.david * scale.factor,3)
zscores <- matrix(cbind(netbas, z.david), ncol=2)
colnames(zscores) <- c("NetBAS", "DAVID")
rownames(zscores) <- go.id
colors=c(seq(0,4.9,length=5), seq(5.1,max(netbas),length=5))
my_palette <- colorRampPalette(c("white", "red2"))(n=9)
p.david <- c("1.3E-8", "4.1E-2", "2.8E-67", "1.5E-6", "1.2E-2", "6.2E-13", "8.6E-2", "6.8E-7", "2.0E-10", "4.2E-8")
note <- cbind(netbas, p.david)
png(filename= "netbas-david.bp.top10.png", width=3.5, height=6, res=1200, unit="in")
heatmap.2(zscores, col=my_palette, dendrogram='none', breaks=colors,
colsep = 1:2, rowsep = 1:10, sepcolor="lightgrey", sepwidth=c(0.02,0.02),
trace='none', Rowv=F, Colv=F,
ylab="Biological Process Terms", xlab="",
margins=c(1,5.5), key.title=NA, key.xlab=NA, key.ylab=NA,
scale="none", symbreaks=F, symm=F, symkey=F,
adjCol=c(0.5,0), adjRow=c(0.05,0), srtRow=45, srtCol=0,
cexRow=0.9, cexCol=0.9, cellnote=note, main="")
dev.off()

hallmark.name # prints all hallmark set names here
hhi.dat <- read.csv("hhi.z.csv", header=F, stringsAsFactors = F)
hhi.z <- matrix(unlist(hhi.dat), nrow=hallmark.dim, ncol=hallmark.dim)
colnames(hhi.z) <- hallmark.name
row.names(hhi.z) <-hallmark.name
hhi.z[1,1]
hhi.z[1,2]
hhi.z[1,3]
hhi.z[1,4]
hhi.z[1,5]
hhi.z[1,6]
hhi.z[36,1]
hhi.z[36,2]
hhi.z[36,3]
hhi.z[36,4]
hhi.z[36,5]
hhi.z[36,6]
hhi.z[36,3]
hhi.z[36,7]
hhi.z[36,8]
hhi.z[36,9]
hhi.z[36,10]
hhi.z[36,11]
hhi.z[36,12]
hhi.z[36,13]
hhi.z[36,14]
hhi.z[36,15]
hhi.z[36,16]
hhi.z[36,17]
hhi.z[36,18]
hhi.z[36,19]
hhi.z[36,20]
hhi.z[36,21]
hhi.z[36,22]
hhi.z[36,23]
hhi.z[36,36]
hhi.z[36,37]
hhi.z[36,38]
hhi.z[36,1]
hhi.z[36,2]
hhi.z[36,5]
hhi.z[36,11]
hhi.z[36,13]
hhi.z[36,]
hhi.z[36,18]
hhi.z[18,18]
hallmarkA <- paste("data/gene.lists/", hallmark.name[36], ".csv", sep="")
hallmarkB <- paste("data/gene.lists/", hallmark.name[18], ".csv", sep="")
fileA <- read.csv(hallmarkA, header=T, stringsAsFactors=F)
hallmarkA <- paste("../NetBAS/NetBAS/data/gene.lists/", hallmark.name[36], ".csv", sep="")
hallmarkB <- paste("../NetBAS/NetBAS/data/gene.lists/", hallmark.name[18], ".csv", sep="")
fileA <- read.csv(hallmarkA, header=T, stringsAsFactors=F)
hallmarkB <- paste("../NetBAS/NetBAS/Data/MSigDB.go.pathway/", hallmark.name[18], "/", hallmark.name[18], ".csv", sep="")
fileB <- read.csv(hallmarkB, header=T, stringsAsFactors=F)
hallmarkA <- paste("../NetBAS/NetBAS/Data/MSigDB.go.pathway/", hallmark.name[36], "/", hallmark.name[36], ".csv", sep="")
fileA <- read.csv(hallmarkA, header=T, stringsAsFactors=F)
which(fileA$gene %in% fileB$gene)
getwd()
devtools::install_github("merang/uPlolar/uPolar")
devtools::install_github("merang/uPolar/uPolar")
setwd("~/Documents/GitHub/uPolar/data/")
list()
sumary(test)
summary(test)
uPolar(test, 1, 2, 3, 4, 0, 0, 391)
uPolar(df, 1, 2, 3, 4, 0, 10, 391)
hhi.z
hhi.z[1,]
hhi[36,]
hhi.z[36,]
getwd()
setwd("~/Documents/GitHub/NetBAS/NetBAS/Data/OMIM/random/")
rri1.100 <- read.csv("random1-100/rri.z.csv", header=F, stringsAsFactors = F)
plot(rri1.100)
plot(c(rri1.100))
rri1.100
hist(rri1.100)
rri1.100 <- unlist(read.csv("random1-100/rri.z.csv", header=F, stringsAsFactors = F))
hist(rri1.100)
rri100 <- unlist(read.csv("random100/rri.z.csv", header=F, stringsAsFactors = F))
rri15 <- unlist(read.csv("random15/rri.z.csv", header=F, stringsAsFactors = F))
rri50 <- unlist(read.csv("random50/rri.z.csv", header=F, stringsAsFactors = F))
rri200 <- unlist(read.csv("random200/rri.z.csv", header=F, stringsAsFactors = F))
rri15.200 <- unlist(read.csv("random15-200/rri.z.csv", header=F, stringsAsFactors = F))
rri.rdm <- c(rri15, rri50, rri200, rri100, rri15.200)
hist(rri.rdm)
hist(rri.rdm, breaks=50)
length(rri.rdm)
length(which(rri.rdm > 2))
length(which(rri.rdm < -2))
124/12500
360/12500
hist(rri1.100, breaks=50)
rri.rdm <- c(rri15, rri50, rri200, rri100, rri15.200, rri1.100)
hist(rri.rdm, breaks=50)
length(rri.rdm)
length(which(rri.rdm > 2))
length(which(rri.rdm < -2))
451/15000
hist(rri.rdm, breaks=50, xlab="Z-score", main="")
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4))
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), breaks=c(seq(-2,2)), col=c("blue", "white", "red"))
hist(rri.rdm, xlab="Z-score", main="", xlim=c(-4,4), breaks=c(seq(-2,2)), col=c("blue", "white", "red"))
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), col=c("blue", "white", "red"))
hist(rri.rdm, xlab="Z-score", main="", xlim=c(-4,4), breaks=c(seq(-2,2)), col=c("blue", "white", "red"))
c(seq(-4,4,100))
getwd()
rri1.100 <- unlist(read.csv("random1-100/rri.z.csv", header=F, stringsAsFactors = F))
rri100 <- unlist(read.csv("random100/rri.z.csv", header=F, stringsAsFactors = F))
rri15 <- unlist(read.csv("random15/rri.z.csv", header=F, stringsAsFactors = F))
rri50 <- unlist(read.csv("random50/rri.z.csv", header=F, stringsAsFactors = F))
rri200 <- unlist(read.csv("random200/rri.z.csv", header=F, stringsAsFactors = F))
rri15.200 <- unlist(read.csv("random15-200/rri.z.csv", header=F, stringsAsFactors = F))
rri.rdm <- c(rri15, rri50, rri200, rri100, rri15.200, rri1.100)
length(rri.rdm)
length(which(rri.rdm > 2)) / length(rri.rdm)
length(which(rri.rdm < -2)) / length(rri.rdm)
colors= c(seq(-4.01,-2.01, length=10), seq(-2, 2, length=20), seq(2.01, 4.01, length=10))
colors
hist(rri.rdm, breaks=colors, xlab="Z-score", main="", xlim=c(-4,4), col=c("blue", "white", "red"))
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), col=c("blue", "white", "red"))
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), col=c("green"))
library(ggplot2)
ggpot(rri.rdm, aes(X, fill=group)) + geom_histogram() +
scale_fill_manual(values = c(c(-4:-2) = "blue"))
ggpot(rri.rdm, aes(X, fill=group)) + geom_histogram()
ggplot(rri.rdm, aes(X, fill=group)) + geom_histogram()
rri.hist <- hist(rri.rdm, plot=F)
head(rri.hist)
plot(hist)
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), col=c("green"))
pdf("rdm.z.hist.pdf", height=6, width=4.5, paper='special')
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), col=c("green"))
dev.off()
length(which(rri.rdm > 2))
length(which(rri.rdm < -2))
length(rri.rdm)
pdf("rdm.z.hist.pdf", height=4.5, width=6, paper='special')
hist(rri.rdm, breaks=50, xlab="Z-score", main="", xlim=c(-4,4), col=c("green"))
dev.off()
getwd()
setwd("~/Documents/GitHub/EColiSNP/")
setwd("EColiSNP/Breseq/")
knitr::opts_chunk$set(echo = TRUE)
list.file <- read.csv("../../MSigDB.go.pathway/list", header=F, stringsAsFactors = F)
#A list of all 50 hallmark gene sets
hallmark.name <- list.file$V1
hallmark.dim <- length(hallmark.name) # 50 sets
hhi.dat <- read.csv("hhi.z.csv", header=F, stringsAsFactors = F)
hhi.z <- matrix(unlist(hhi.dat), nrow=hallmark.dim, ncol=hallmark.dim)
colnames(hhi.z) <- hallmark.name
row.names(hhi.z) <-hallmark.name
setwd("~/Documents/GitHub/NetBAS/NetBAS/Data/OMIM/hallmark/")
hhi.p <- matrix(unlist(read.csv("hhi.p.csv", header=F, stringsAsFactors = F)), nrow=hallmark.dim, ncol=hallmark.dim)
colnames(hhi.p) <- hallmark.dim
colnames(hhi.p) <- hallmark.name
row.names(hhi.p) <- hallmark.name
hhi.p
hhi.p2 <- -log10(hhi.p + 0.00001)
hhi.p2
hhi.p2 <- -log10(hhi.p + 0.0000999)
hhi.p2
col.test(hhi.z, hhi.p2)
col.test(c(hhi.z), c(hhi.p2))
cor.test(hhi.z, hhi.p2)
my_palette <- colorRampPalette(c("blue2", "white", "red2"))(n = 20)
#colors= c(seq(-5,-1.5, length=10), seq(-1.49, 1.49, length=10), seq(1.5,5, length=10))
colors = c(seq(-10,10,length=21))
heatmap.2(hhi.p2, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=45, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
my_palette <- colorRampPalette(c("blue2", "white", "red2"))(n = 10)
#colors= c(seq(-5,-1.5, length=10), seq(-1.49, 1.49, length=10), seq(1.5,5, length=10))
colors = c(seq(-4,4,length=11))
heatmap.2(hhi.p2, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=45, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
heatmap.2(hhi.p2, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="-log(p)", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=45, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
colnames(hhi.p2) <- c(1:50)
row.names(hhi.p2) <- c(1:50)
heatmap.2(hhi.p2, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="log10(p-value)",
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
#srtCol=45, adjCol=c(1,0),
dendrogram = "row",
margins=c(14,18.5), sepwidth=c(0.01,0.01), #symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
#keysize=1, key.par=list(mar=c(2,1,2,2)))
#lmat=rbind( c(0, 3, 4), c(2,1,1.5)), lwid=c(3, 4, 2))
#lmat=rbind(c(5, 4, 2), c(6, 1, 3)), lhei=c(2, 5), lwid=c(1, 10, 1))
heatmap.2(hhi.p2, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="log10(p-value)",
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
#srtCol=45, adjCol=c(1,0),
dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), #symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
#keysize=1, key.par=list(mar=c(2,1,2,2)))
#lmat=rbind( c(0, 3, 4), c(2,1,1.5)), lwid=c(3, 4, 2))
#lmat=rbind(c(5, 4, 2), c(6, 1, 3)), lhei=c(2, 5), lwid=c(1, 10, 1))
heatmap.2(hhi.p2, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="log10(p-value)",
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
#srtCol=45, adjCol=c(1,0),Colv=none, Rowv=none,
dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), #symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
#keysize=1, key.par=list(mar=c(2,1,2,2)))
#lmat=rbind( c(0, 3, 4), c(2,1,1.5)), lwid=c(3, 4, 2))
#lmat=rbind(c(5, 4, 2), c(6, 1, 3)), lhei=c(2, 5), lwid=c(1, 10, 1))
matrix(c(1:4), nrow=2, ncol=2)
cbind(c(1:2), c(1:3))
cbind(c(1:2), c(2:3))
getwd()
library(gplots) #for heatmap.2
hhi.z.dat <- read.csv("hhi.z.csv", header=F, stringsAsFactors = F)
hhi.z <- matrix(unlist(hhi.z.dat), nrow=50, ncol=50)
hhi.p.dat <- read.csv("hhi.p.csv", header=F, stringsAsFactors = F)
hhi.p <- matrix(unlist(hhi.p.dat), nrow=50, ncol=50)
1e-4
log10(1e-4)
max(1e-4, 0.0000999)
min(1e-4, 0.0000999)
hhi.logp <- -log10(max(0.0000999, hhi.p))
max(hhi.logp)
min(hhi.logp)
hhi.logp
hhi.p
max(hhi.p)
max(-log10(hhi.p))
max(-log10(hhi.p+0.0000999))
min(-log10(hhi.p+0.0000999))
hhi.logp <- -log10(hhi.p+0.00001)
min(hhi.logp)
min(hhi.p)
max(hhi.p)
max(hhi.logp)
hhi.logp <- -log10(hhi.p+0.00001) + log10(1.00001)
min(hhi.p)
max(hhi.logp)
min(hhi.logp)
hhi.logp <- -log10(hhi.p+0.00001)
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=45, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=45, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=45, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=0, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
my_palette <- colorRampPalette(c("blue2", "white", "red2"))(n = 20)
#colors= c(seq(-5,-1.5, length=10), seq(-1.49, 1.49, length=10), seq(1.5,5, length=10))
colors = c(seq(-10,10,length=21))
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=0, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
png("hhi.z.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=0, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
png("hhi.z.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
my_palette <- colorRampPalette(c("blue2", "white", "red2"))(n = 20)
#colors= c(seq(-5,-1.5, length=10), seq(-1.49, 1.49, length=10), seq(1.5,5, length=10))
colors = c(seq(-5,5,length=21))
png("hhi.p.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
my_palette <- colorRampPalette(c("white", "red2"))(n = 10)
colors = c(seq(0,5,length=11))
png("hhi.p.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
png("hhi.p.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = F,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
my_palette <- colorRampPalette(c("white", "red2"))(n = 10)
colors = c(seq(0,5,length=11))
png("hhi.p.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = F,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
png("hhi.p.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="log10(p-value)", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = F,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
png("hhi.p.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="-log10(p-value)", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = F,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
my_palette <- colorRampPalette(c("blue2", "white", "red2"))(n = 20)
colors = c(seq(-10,10,length=21))
png("hhi.z.heatmap.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "both",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
png("hhi.z.heatmap.png", width=12, height=11, res=1200, units="in")
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Interaction Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
png("hhi.z.heatmap.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(hhi.z, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title="Interaction Z-score", key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = TRUE,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
my_palette <- colorRampPalette(c("white", "red2"))(n = 10)
colors = c(seq(0,5,length=11))
png("hhi.p.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title=expression(-log[10](p-value))
"-log10(p-value)",
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = F,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
my_palette <- colorRampPalette(c("white", "red2"))(n = 10)
colors = c(seq(0,5,length=11))
png("hhi.p.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(hhi.logp, col=my_palette, trace='none', breaks=colors,
Rowv = F, Colv = F, revC = T,
key.xlab=NA, key.title=expression(-log[10](p-value)),
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14,18.5), sepwidth=c(0.01,0.01), symbreaks = F,
sepcolor="grey", colsep=1:hallmark.dim, rowsep=1:hallmark.dim)
dev.off()
list.file <- read.csv("../../MSigDB.go.pathway/list", header=F, stringsAsFactors = F)
hallmark.name <- list.file$V1
overlap.matrix <- matrix(0, ncol=50, nrow=50)
for (i in 1:50) {
file.name <- paste("../../MSigDB.go.pathway/", hallmark.name[i], "/",
hallmark.name[i], ".csv", sep="")
file.a <- read.csv(file.name, header=T)
list.a <- file.a$gene
for (j in 1:50) {
file.nameb <- paste("../../MSigDB.go.pathway/", hallmark.name[j], "/",
hallmark.name[j], ".csv", sep="")
file.b <- read.csv(file.nameb, header=T)
list.b <- file.b$gene
jac <- length(which(list.a %in% list.b))/length(unique(c(list.a, list.b)))
overlap.matrix[i,j] = overlap.matrix[i,j] + jac
}
}
colnames(overlap.matrix) <- c(1:50)
row.names(overlap.matrix) <- c(1:50)
my_palette <- colorRampPalette(c("white", "red2"))(n = 10)
colors = c(seq(0,0.1,length=11))
png("hallmark.jaccard.png", width=12, height=11, res=1200, units="in")
heatmap.2(overlap.matrix, col=my_palette, trace='none', breaks=colors,
Rowv=F, Colv=F, revC=T,
key.xlab=NA, key.title="Jaccard Index",
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14.5,18), sepwidth=c(0.01,0.01), #symbreaks = TRUE,
sepcolor="grey", colsep=1:50, rowsep=1:50)
dev.off()
png("hallmark.jaccard.colorbar.png", width=12, height=4, res=1200, units="in")
heatmap.2(overlap.matrix, col=my_palette, trace='none', breaks=colors,
Rowv=F, Colv=F, revC=T,
key.xlab=NA, key.title="Jaccard Index",
key.ylab=NA, key.xtickfun = NULL, key.ytickfun = NULL,
srtCol=90, adjCol=c(1,0), dendrogram = "none",
margins=c(14.5,18), sepwidth=c(0.01,0.01), #symbreaks = TRUE,
sepcolor="grey", colsep=1:50, rowsep=1:50)
dev.off()
p.net <- graph.adjacency(hhi.logp, mode="undirected", weighted = T, diag = F)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 2, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 3, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight)
max(E(p.net)$weight)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4.5, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4.8, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4.9, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 5, abs(E(p.net)$weight), 0)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, abs(E(p.net)$weight), -1)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, E(p.net)$weight, -1)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
p.net <- graph.adjacency(hhi.logp, mode="undirected", weighted = T, diag = F)
#apparently every two sets are connected, we only plot those with more than 600 connections
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, E(p.net)$weight, -1)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/2)
p.net <- graph.adjacency(hhi.logp, mode="undirected", weighted = T, diag = F)
#apparently every two sets are connected, we only plot those with more than 600 connections
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, E(p.net)$weight, -1)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/4)
gene.count <- read.csv("gene.count.csv", header=T, stringsAsFactors = F)
v.size <- gene.count$gene.number
p.net <- graph.adjacency(hhi.logp, mode="undirected", weighted = T, diag = F)
#apparently every two sets are connected, we only plot those with more than 600 connections
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4, E(p.net)$weight, -1)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/4,vertex.size=sqrt(v.size)*1.2)
gene.count <- read.csv("gene.count.csv", header=T, stringsAsFactors = F)
v.size <- gene.count$gene.number
p.net <- graph.adjacency(hhi.logp, mode="undirected", weighted = T, diag = F)
#apparently every two sets are connected, we only plot those with more than 600 connections
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4.9, E(p.net)$weight, -1)
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/4,vertex.size=sqrt(v.size)*1.2)
gene.count <- read.csv("gene.count.csv", header=T, stringsAsFactors = F)
v.size <- gene.count$gene.number
p.net <- graph.adjacency(hhi.logp, mode="undirected", weighted = T, diag = F)
#apparently every two sets are connected, we only plot those with more than 600 connections
E(p.net)$weight <- ifelse(abs(E(p.net)$weight) > 4.99, E(p.net)$weight, -1)
pdf("hhi.p.network.pdf", height=8, width=8, paper='special')
plot.igraph(p.net, vertex.label=V(p.net)$name, layout=layout_in_circle,
edge.color="red", edge.width=E(p.net)$weight/4,vertex.size=sqrt(v.size)*1.2)
dev.off()
